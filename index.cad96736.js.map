{"mappings":"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","sources":["src/js/clock.js","src/js/localstorage.js","src/js/todo.js"],"sourcesContent":["const timerEl = document.querySelector('.js-timer-items');\nconst btnsEl = document.querySelector('.js-buttons__wrapper');\n\nconst timeZone = -new Date().getTimezoneOffset() / 60;\n\nlet intervalId = null;\n\nbtnsEl.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(event) {\n  const showBtn = event.target.matches('button.js-show');\n  const hideBtn = event.target.matches('button.js-hide');\n\n  if (showBtn) {\n    startClock(timerEl);\n    setTimeout(() => {\n      document.querySelector('.timer').classList.remove('is-hidden');\n      document.querySelector('.js-show').classList.add('is-hidden');\n      document.querySelector('.js-hide').classList.remove('is-hidden');\n      document.querySelector('.js-change').classList.remove('is-hidden');\n    }, 1000);\n    return;\n  }\n  if (hideBtn) {\n    clearInterval(intervalId);\n    setTimeout(() => {\n      document.querySelector('.timer').classList.add('is-hidden');\n      document.querySelector('.js-show').classList.remove('is-hidden');\n      document.querySelector('.js-hide').classList.add('is-hidden');\n      document.querySelector('.js-change').classList.add('is-hidden');\n    }, 1000);\n    return;\n  }\n  const textChangeTextBtn = document\n    .querySelector('.js-change')\n    .textContent.trim();\n\n  setTimeout(() => {\n    timerEl.querySelector('.js-timer__timezone').classList.toggle('is-hidden');\n\n    if (textChangeTextBtn === 'Прибрати PM/AM') {\n      document.querySelector('.js-change').textContent = 'Показати PM/AM';\n    } else {\n      document.querySelector('.js-change').textContent = 'Прибрати PM/AM';\n    }\n  }, 1000);\n}\n\nfunction getTimeComponents(time) {\n  const hours = ((Math.floor(time / 1000 / 60 / 60) % 24) + timeZone) % 24;\n  const minutes = Math.floor(time / 1000 / 60) % 60;\n  const seconds = Math.floor(time / 1000) % 60;\n\n  return {\n    hours,\n    minutes,\n    seconds,\n  };\n}\n\nfunction addPad(value) {\n  return String(value).padStart(2, 0);\n}\n\nfunction declensionNum(num, words) {\n  return words[\n    num % 100 > 4 && num % 100 < 20\n      ? 2\n      : [2, 0, 1, 1, 1, 2][num % 10 < 5 ? num % 10 : 5]\n  ];\n}\n\nfunction startClock(rootSelector) {\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n\n    const { hours, minutes, seconds } = getTimeComponents(currentTime);\n    const timeZoneName = hours >= 12 ? 'PM' : 'AM';\n\n    rootSelector.querySelector('.js-timer__hours').textContent = addPad(hours);\n    rootSelector.querySelector('.js-timer__minutes').textContent =\n      addPad(minutes);\n    rootSelector.querySelector('.js-timer__seconds').textContent =\n      addPad(seconds);\n    rootSelector.querySelector('.js-timer__timezone').textContent =\n      timeZoneName;\n\n    rootSelector.querySelector('.js-timer__hours').dataset.title =\n      declensionNum(hours, ['година', 'години', 'годин']);\n    rootSelector.querySelector('.js-timer__minutes').dataset.title =\n      declensionNum(minutes, ['хвилина', 'хвилини', 'хвилин']);\n    rootSelector.querySelector('.js-timer__seconds').dataset.title =\n      declensionNum(seconds, ['секунда', 'секунди', 'секунд']);\n  }, 1000);\n}\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Remove item error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","import localStorageApi from './localstorage.js';\nconst formEl = document.querySelector('form');\nconst ulEl = document.querySelector('ul');\n\nconst LOCAL_KEY = 'todo-items';\n\n// Перевірка якщо Local Storage пустий\nlet items = localStorageApi.load(LOCAL_KEY) || [];\n\nformEl.addEventListener('submit', onClickSubmit);\nulEl.addEventListener('click', onBtnClick);\n\n\nfunction updateList() {\n  const markup = items\n    .map(item => {\n      return `\n      <li>\n      <span class=\"text${item.done ? ' done' : ''}\">${item.text}</span>\n      <div>\n        <button type=\"button\" data-id=\"${item.id}\" class=\"delete\">Видалити</button>\n        <button type=\"button\" data-id=\"${item.id}\" class=\"done\">${item.done ? 'Виконано!' : 'Не виконано'}</button>\n      </div>\n      </li>\n    `;\n    })\n    .join('');\n\n  ulEl.innerHTML = markup;\n\n  // Додаємо до виконаних тасок клас сompleted при загрузці\n  for (let item of items) {\n    if (item.done) {\n      const doneBtn = document.querySelector(`[data-id=\"${item.id}\"].done`);\n\n      doneBtn.classList.add('сompleted');\n    }\n  }\n}\n\nfunction onClickSubmit(event) {\n    event.preventDefault();\n    let input = event.currentTarget.elements['user-todos'];\n    const task = input.value.trim();\n\n    if (task != '') {\n      const repeatTodos = items.find(({ text }) => text === task);\n      if (repeatTodos) {\n        alert('Така задача вже існує');\n        return;\n      }\n    }\n\n    const item = {\n      id: Date.now(),\n      text: task,\n      done: false,\n    };\n\n    items.push(item);\n    input.value = '';\n    console.log(input)\n\n    localStorageApi.save(LOCAL_KEY, items);\n    updateList();\n\n}\n\n\nfunction onBtnClick(e) {\n  // Робимо пошук відповідної кнопки\n  const deleteBtn = e.target.matches('button.delete');\n  const doneBtn = e.target.classList.contains('done');\n\n  if (deleteBtn) {\n    // Знаходимо id\n    const todosId = parseInt(e.target.dataset.id);\n    // Вертаємо новий масив, без елемента з найденим id\n    items = items.filter(({ id }) => id !== todosId);\n    // Зберігаємо у Local Storage\n    localStorageApi.save(LOCAL_KEY, items);\n    // Обновляємо розмітку\n    updateList();\n  }\n\n  if (doneBtn) {\n    // Знаходимо id\n    const todosId = parseInt(e.target.dataset.id);\n    // Знаходимо відповідну кнопку\n    const item = items.find(({ id }) => id === todosId);\n\n    // Якщо кнопка знайдена\n    if (item) {\n      const doneButton = e.target;\n      // Робимо реверсію значення \"done\"\n      item.done = !item.done;\n\n      // Додає або знімає класс\n      doneButton.classList.toggle('сompleted');\n\n      // Змінює назву кнопки від параметра \"done\"\n      doneButton.innerText = item.done ? 'Виконано!' : 'Не виконано';\n\n      // Шукаємо span\n      const spanEl = doneButton.parentElement.previousElementSibling;\n\n      // Змінюємо йому клас\n      spanEl.classList.toggle('done');\n\n      // зберігаємо у Local Storage\n      localStorageApi.save(LOCAL_KEY, items);\n    }\n  }\n}\n  \nupdateList();\n"],"names":["$59fa8b5735423a4b$var$timerEl","document","querySelector","$59fa8b5735423a4b$var$btnsEl","$59fa8b5735423a4b$var$timeZone","Date","getTimezoneOffset","$59fa8b5735423a4b$var$intervalId","$59fa8b5735423a4b$var$addPad","value","String","padStart","$59fa8b5735423a4b$var$declensionNum","num","words","addEventListener","event","showBtn","target","matches","hideBtn","rootSelector","setInterval","currentTime","now","hours","minutes","seconds","time","Math","floor","$59fa8b5735423a4b$var$getTimeComponents","timeZoneName","textContent","dataset","title","setTimeout","classList","remove","add","clearInterval","textChangeTextBtn","trim","toggle","$89a4baeedb6cdec9$export$2e2bcd8739ae039","key","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","log","$584cc1271d36de1e$var$formEl","$584cc1271d36de1e$var$ulEl","$584cc1271d36de1e$var$items","load","$584cc1271d36de1e$var$updateList","markup","map","item","done","text","id","join","innerHTML","item1","preventDefault","input","currentTarget","elements","task","find","alert","push","save","e","deleteBtn","doneBtn","contains","todosId","parseInt","filter","doneButton","innerText","parentElement","previousElementSibling"],"version":3,"file":"index.cad96736.js.map"}